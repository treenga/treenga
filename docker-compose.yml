version: '2'

services:

  open-web:
    build:
      context: ./
      dockerfile: deploy/web.docker
    volumes:
      - ./:/var/www
    ports:
      - ${EXT_WEB_PORT}:80
    links:
      - open-app
    networks:
      open-treenga:
        aliases:
          - ${APP_HOST}

  open-app:
    build:
      context: ./
      dockerfile: deploy/app.docker
    volumes:
      - ./:/var/www
    links:
      - open-database
      - open-cache
      - open-node
    networks:
      - open-treenga

  open-node:
    image: node:8.12
    volumes:
      - ./:/root/project
    tty: true
    environment:
      - "REDIS_PORT=6379"
      - "REDIS_HOST=cache"
    ports:
      - ${EXT_NODE_PORT}:6001
    working_dir: /root/project
    networks:
      - open-treenga

  open-database:
    image: postgres:12.1
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - /vol/pg-open:/var/lib/postgresql/data
    ports:
      - ${EXT_DB_PORT}:5432
    networks:
      - open-treenga

  open-cache:
    image: redis:3.0
    ports:
      - ${EXT_CACHE_PORT}:6379
    networks:
      - open-treenga

  open-queue:
    restart: always
    build:
      context: ./
      dockerfile: deploy/app.docker
    command: "php artisan queue:work --sleep=3 --tries=1"
    volumes:
      - ./:/var/www
    networks:
      - open-treenga

  open-schedule:
    restart: always
    build:
      context: ./
      dockerfile: deploy/app.docker
    command: '/bin/sh -c "while [ true ]; do (php artisan schedule:run -q --verbose --no-interaction &); sleep 60; done"'
    volumes:
      - ./:/var/www
    networks:
      - open-treenga

networks:
  open-treenga:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.168.5.0/28
